{"version":3,"sources":["components/headerBox/HeaderBox.jsx","components/searchBox/SearchBox.jsx","components/card/Card.jsx","components/cardList/CardList.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeaderBox","title","SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","monster","name","src","id","email","CardList","monsters","map","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAMeA,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,6BAAKA,KCSvBC,G,MATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAChB,uBACEC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,MCMCI,G,MAXF,SAAAC,GAAK,OAChB,sBAAKJ,UAAU,iBAAf,UACE,qBACEK,IAAKD,EAAME,QAAQC,KACnBC,IAAG,+BAA0BJ,EAAME,QAAQG,GAAxC,4BAEL,6BAAKL,EAAME,QAAQC,OACnB,4BAAIH,EAAME,QAAQI,aCKPC,G,MAVE,SAAAP,GACf,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAAMQ,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCiCZK,G,wDApCb,aAAe,IAAD,8BACZ,gBAaFf,aAAe,SAAAgB,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEJ,SAAUa,S,oBAO7C,WACE,MAAkCC,KAAKN,MAA/BR,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,YACZU,EAAmBf,EAASgB,QAAO,SAAAtB,GAAO,OAC9CA,EAAQC,KAAKsB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWJ,MAAM,aACjB,cAAC,EAAD,CACEE,YAAY,0BACZC,aAAc2B,KAAK3B,eAErB,cAAC,EAAD,CAAUa,SAAUe,W,GA/BVI,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7df4a3c8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./headerBox.css\";\n\nconst HeaderBox = ({ title }) => <h1>{title}</h1>;\n\nexport default HeaderBox;\n","import React from \"react\";\n\nimport \"./searchBox.css\";\n\nconst SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n\nexport default SearchBox;\n","import React from \"react\";\n\nimport \"./card.css\";\n\nconst Card = props => (\n  <div className=\"card-container\">\n    <img\n      alt={props.monster.name}\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"../card/Card\";\n\nimport \"./cardList.css\";\n\nconst CardList = props => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport HeaderBox from \"./components/headerBox/HeaderBox\";\nimport SearchBox from \"./components/searchBox/SearchBox\";\nimport CardList from \"./components/cardList/CardList\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <HeaderBox title=\"Monsters\" />\n        <SearchBox\n          placeholder=\"type filter monsters...\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}